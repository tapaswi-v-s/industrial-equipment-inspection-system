/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.system.plant_manager;

import com.system.models.Inspection;
import com.system.models.Plant;
import com.system.utils.DatabaseHelper;
import com.system.utils.PDFUtil;
import com.system.utils.Utils;
import java.time.LocalDate;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tapas
 */
public class ViewReports extends javax.swing.JPanel {

    /**
     * Creates new form ViewReports
     */
    JPanel mainPanel;
    List<Inspection> activeInspections;
    List<Inspection> pastInspections;
    PlantManagerController controller = new PlantManagerController();
    public ViewReports(JPanel mainPanel) {
        this.mainPanel = mainPanel;
        initComponents();
        populate();
    }
    
    void populate(){
        activeInspections = controller.fetchActiveInspections();
        pastInspections = controller.fetchPastInspections();
        populateActiveInspections();
        populatePastInspections();
    }
    
    void populateActiveInspections(){
        DefaultTableModel model = (DefaultTableModel) tblActiveInspections.getModel();
        model.setRowCount(0);
        for (Inspection i : activeInspections) {
            Vector<String> row = new Vector<String>();
            row.add("" + i.getId());
            try{
//                String f = Utils.sdf.format(LocalDate.parse());
                row.add(i.getDate());
            }catch(Exception e){
                String f = Utils.sdf.format(LocalDate.now());
                row.add(f);
            }
            row.add(i.getRemark());
            row.add(""+i.getPlantID());
            model.addRow(row);
        }
    }
    
    void populatePastInspections(){
        DefaultTableModel model = (DefaultTableModel) tblPastInspections.getModel();
        model.setRowCount(0);
        for (Inspection i : pastInspections) {
            Vector<String> row = new Vector<String>();
            row.add("" + i.getId());
            try{
                String f = Utils.sdf.format(LocalDate.parse(i.getDate()));
                row.add(f);
            }catch(Exception e){
                String f = Utils.sdf.format(new Date());
                row.add(f);
            }
            row.add(i.getRemark());
            row.add(""+i.getPlantID());
            row.add(""+i.getInspectorID());
            row.add(""+i.getEvaluatorID());
            row.add(""+i.getEvaluatorRemark());
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblActiveInspections = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPastInspections = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnView1 = new javax.swing.JButton();
        btnView2 = new javax.swing.JButton();
        btnView3 = new javax.swing.JButton();
        btnView4 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel1.setText("Active Inspection");

        tblActiveInspections.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Inspection Date", "Remark", "Plant ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblActiveInspections);

        tblPastInspections.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Insp. Date", "Remark", "Plant ID", "Inspector ID", "Evaluator ID", "Eva. Remark"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblPastInspections);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel2.setText("Past Inspection");

        btnBack.setText("‚Üê");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnView1.setText("Inspection Report");
        btnView1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnView1ActionPerformed(evt);
            }
        });

        btnView2.setText("Inspections Report");
        btnView2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnView2ActionPerformed(evt);
            }
        });

        btnView3.setText("Equipment Report");
        btnView3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnView3ActionPerformed(evt);
            }
        });

        btnView4.setText("Equipment Report");
        btnView4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnView4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnView1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(75, 75, 75)
                        .addComponent(btnView3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btnView2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(84, 84, 84)
                        .addComponent(btnView4)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnView1)
                    .addComponent(btnBack)
                    .addComponent(btnView3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnView2)
                    .addComponent(btnView4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        Utils.goBack(mainPanel, this);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnView1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnView1ActionPerformed
        String fileName = "Active_Inspections";
        PDFUtil.generatePDF(this, "Active Inspections", fileName, DatabaseHelper.getInstance()
                .fetchData("SELECT * FROM sql5694823.inspection WHERE evaluator_id is null"));
    }//GEN-LAST:event_btnView1ActionPerformed

    private void btnView2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnView2ActionPerformed
        String fileName = "Past_Inspections";
        PDFUtil.generatePDF(this,fileName, "Past Inspections", DatabaseHelper.getInstance()
                .fetchData("SELECT * FROM sql5694823.inspection WHERE evaluator_id is not null"));
    }//GEN-LAST:event_btnView2ActionPerformed

    private void btnView3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnView3ActionPerformed

        if(tblActiveInspections.getSelectedRow() < 0){
            Utils.showDialog(this, null, "Please select an inspection");
        }else{
            Inspection i = activeInspections
            .get(tblActiveInspections.getSelectedRow());
            String fileName = "Plant_"+i.getPlantID()+"_Equipments";
            PDFUtil.generatePDF(this, "Plant_"+i.getPlantID()+"_Equipments", fileName, DatabaseHelper.getInstance()
                .fetchData("SELECT * FROM sql5694823.equipment WHERE plant_id = "+
                    activeInspections.get(tblActiveInspections.getSelectedRow()).getPlantID()));
        }

    }//GEN-LAST:event_btnView3ActionPerformed

    private void btnView4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnView4ActionPerformed
        if(tblPastInspections.getSelectedRow() < 0){
            Utils.showDialog(this, null, "Please select an inspection");
        }else{
            Inspection i = pastInspections
            .get(tblPastInspections.getSelectedRow());
            String fileName = "Plant_"+i.getPlantID()+"_Equipments";
            PDFUtil.generatePDF(this, "Plant_"+i.getPlantID()+"_Equipments", fileName, DatabaseHelper.getInstance()
                .fetchData("SELECT * FROM sql5694823.equipment WHERE plant_id = "+
                    pastInspections.get(tblPastInspections.getSelectedRow()).getPlantID()));
        }
    }//GEN-LAST:event_btnView4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnView1;
    private javax.swing.JButton btnView2;
    private javax.swing.JButton btnView3;
    private javax.swing.JButton btnView4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblActiveInspections;
    private javax.swing.JTable tblPastInspections;
    // End of variables declaration//GEN-END:variables
}
