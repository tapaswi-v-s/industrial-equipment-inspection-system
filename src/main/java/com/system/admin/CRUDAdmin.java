/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.system.admin;

import com.system.models.users.User;
import com.system.utils.Utils;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JPanel;

/**
 *
 * @author sid
 */
public class CRUDAdmin extends javax.swing.JPanel {
private JPanel mainPanel;
final AdminController controller = new AdminController();
User user; 
    /**
     * Creates new form CRUDAdmin
     */
    public CRUDAdmin(JPanel mainPanel, User user) {
        this.mainPanel = mainPanel;
        initComponents();
        this.user = user;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbUserSelect = new javax.swing.JComboBox<>();
        LabelAddUser = new javax.swing.JLabel();
        LabelName = new javax.swing.JLabel();
        TextName = new javax.swing.JTextField();
        LabelGender = new javax.swing.JLabel();
        LabelDOB = new javax.swing.JLabel();
        LabelEmail = new javax.swing.JLabel();
        TextEmail = new javax.swing.JTextField();
        LabelPassword = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        LabelHeading = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        cmbGender = new javax.swing.JComboBox<>();
        dateChooserDob = new com.toedter.calendar.JDateChooser();
        TextPassword = new javax.swing.JPasswordField();

        cmbUserSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select User", "Plant Manager", "Evaluator", "Inspector", " " }));
        cmbUserSelect.setToolTipText("Select User");
        cmbUserSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUserSelectActionPerformed(evt);
            }
        });

        LabelAddUser.setText("Select User to Add");

        LabelName.setText("Name");

        LabelGender.setText("Gender");

        LabelDOB.setText("DOB");

        LabelEmail.setText("Email");

        TextEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextEmailActionPerformed(evt);
            }
        });

        LabelPassword.setText("Password");

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");

        LabelHeading.setText("Add User");

        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        cmbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Gender", "Male", "Female", "Others" }));
        cmbGender.setToolTipText("Select Gender");
        cmbGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGenderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClear)
                        .addGap(49, 49, 49)
                        .addComponent(btnSubmit))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LabelAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbUserSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(206, 206, 206)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LabelName)
                                    .addComponent(LabelGender)
                                    .addComponent(LabelDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(LabelEmail)
                                    .addComponent(LabelPassword)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                                .addComponent(LabelHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TextEmail)
                            .addComponent(TextName)
                            .addComponent(cmbGender, 0, 163, Short.MAX_VALUE)
                            .addComponent(dateChooserDob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TextPassword))))
                .addContainerGap(182, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelHeading)
                    .addComponent(btnBack))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(LabelAddUser))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelName))))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LabelGender)
                        .addGap(1, 1, 1)
                        .addComponent(cmbUserSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LabelDOB)
                            .addComponent(dateChooserDob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelEmail))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelPassword)
                    .addComponent(TextPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnClear))
                .addContainerGap(45, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TextEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextEmailActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        Utils.goBack(mainPanel, this);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbUserSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUserSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbUserSelectActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        String validationMessage = validateFields();
        if(!validationMessage.isBlank()){
            Utils.showDialog(this, null, validationMessage);
        }else{
         
            String name = TextName.getText();
            String gender = cmbGender.getSelectedItem().toString();
            String User = cmbUserSelect.getSelectedItem().toString();
            Date dob = dateChooserDob.getDate();
            DateFormat dateFormat = new SimpleDateFormat("E, MMM dd yyyy HH:mm:ss");  
                String strDate = dateFormat.format(dob);
            String email = TextEmail.getText();
            String passwordHash = String.valueOf(TextPassword.getPassword());
            int roleid = Utils.getroleid(User);
            if(controller.addUser(new User(-1, name, gender,
                 strDate, email, passwordHash, roleid))){
                Utils.showDialog(this, "User added successfully...",null);
            }else{
                Utils.showDialog(this, null, "Something went wrong...");
            }
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void cmbGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbGenderActionPerformed
String validateFields(){
        String validationMessage = "";
        if(TextName.getText().isBlank()){
            validationMessage += "Name missing...\n";
        }
        if(cmbGender.getSelectedItem()==null || cmbGender.getSelectedItem().toString().equals("Select Gender")){
            validationMessage += "Gender missing...\n";
        }
        if(cmbUserSelect.getSelectedItem()==null || cmbUserSelect.getSelectedItem().toString().equals("Select User")){
            validationMessage += "User missing...\n";
        }
        if(dateChooserDob.getDate()==null){
            validationMessage += "Date missing...\n";
        }
        if(TextEmail.getText().isBlank()){
            validationMessage += "Email missing...\n";
        }
        if(TextPassword.getPassword().length==0){
            validationMessage += "Password missing...\n";
        }
        return validationMessage;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelAddUser;
    private javax.swing.JLabel LabelDOB;
    private javax.swing.JLabel LabelEmail;
    private javax.swing.JLabel LabelGender;
    private javax.swing.JLabel LabelHeading;
    private javax.swing.JLabel LabelName;
    private javax.swing.JLabel LabelPassword;
    private javax.swing.JTextField TextEmail;
    private javax.swing.JTextField TextName;
    private javax.swing.JPasswordField TextPassword;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cmbGender;
    private javax.swing.JComboBox<String> cmbUserSelect;
    private com.toedter.calendar.JDateChooser dateChooserDob;
    // End of variables declaration//GEN-END:variables
}
